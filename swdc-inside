#!/usr/bin/env bash

if [[ -e /usr/local/bin/setup_nvm ]]; then
  # shellcheck source=/dev/null
  # shellcheck disable=SC2046
  source /usr/local/bin/setup_nvm
fi

if [[ -z "$FILE" ]]; then
  FILE="$0"

  if [[ -L "$0" ]]; then
    FILE=$(readlink "$0")
  fi

  DIR=$(dirname "${FILE}")

  # shellcheck source=functions.sh
  source "${DIR}/functions.sh"
fi

SHOPWARE_PROJECT="$2"

if [[ "$RUN_MODE" == "local" ]]; then
  SHOPWARE_FOLDER="${CODE_DIRECTORY}/$SHOPWARE_PROJECT"
else
  SHOPWARE_FOLDER="/var/www/html/$SHOPWARE_PROJECT"
  CODE_DIRECTORY="/var/www/html"
fi
export SWDC_IN_DOCKER=1

modules=(base)

if [[ -n "$SHOPWARE_PROJECT" ]]; then
  modules=(base classic)

  if [[ -d "$SHOPWARE_FOLDER/app" ]]; then
    modules=(base classic-composer classic)
  fi

  if [[ -f "$SHOPWARE_FOLDER/recovery/install/data/sql/install.sql" ]]; then
    modules=(base classic-zip classic)
  fi

  if [[ -f "$SHOPWARE_FOLDER/src/Kernel.php" || -f "$SHOPWARE_FOLDER/src/Core/composer.json" || -f "$SHOPWARE_FOLDER/bin/build-js.sh" ]]; then
    modules=(base platform)
  fi
  
  if grep -q "shopware\/production" "$SHOPWARE_FOLDER/composer.json"; then
    modules=(base platform)
  fi

  if [[ -f "$SHOPWARE_FOLDER/PLATFORM_COMMIT_SHA" ]]; then
    modules=(base platform-prod platform)
  fi

  if [[ -f "$SHOPWARE_FOLDER/symfony.lock" ]]; then
    modules=(base platform-prod platform)
  fi

fi

# Need to be in docker folder for docker-compose
cd "${DIR}" || exit 1

for module in "${modules[@]}"; do
  # shellcheck source=/dev/null
  if [[ -f "./modules/${module}/${1}.sh" ]]; then
    # shellcheck source=/dev/null
    source "./modules/${module}/${1}.sh"
    exit 0
  fi

  # shellcheck source=/dev/null
  if [[ -f "/swdc-cfg/modules/${module}/${1}.sh" ]]; then
    # shellcheck source=/dev/null
    source "/swdc-cfg/modules/${module}/${1}.sh"
    exit 0
  fi
done

cat ./modules/base/header.txt
echo ""
echo ""

/opt/swdc/swdc-inside command-list
